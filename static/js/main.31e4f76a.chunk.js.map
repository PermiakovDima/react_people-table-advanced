{"version":3,"sources":["component/Header/Header.tsx","component/HomePage/HomePage.tsx","component/PersonRow/PersonRow.tsx","component/PeopleTable/PeopleTable.tsx","component/PeoplePage/PeoplePage.tsx","api/api.ts","App.tsx","index.tsx"],"names":["Header","className","role","id","to","HomePege","PersonRow","person","visiblePeople","location","useLocation","activeRow","pathname","searchParams","search","classNames","includes","slug","name","sex","born","died","some","elem","fatherNameSlug","fatherName","motherNameSlug","motherName","PeopleTable","handleSortChang","onClick","map","PeoplePage","useState","people","setPeople","fetchPeople","a","fetch","then","res","json","peopleFromServer","useEffect","updatePeople","find","mother","father","history","useNavigate","URLSearchParams","AppliedQuery","get","query","setQuery","sortBy","sortOrder","applyQuery","useCallback","debounce","newQuery","set","delete","toString","filter","toLowerCase","sort","b","localeCompare","type","placeholder","onChange","event","target","value","innerHTML","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31e4f76a.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header: React.FC = () => {\n  return (\n    <div className=\"Header\">\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          <div className=\"navbar-start\">\n            <NavLink\n              to=\"/\"\n              className=\"navbar-item\"\n            >\n              Home\n            </NavLink>\n            <NavLink\n              to=\"/people\"\n              className=\"navbar-item\"\n            >\n              People Page\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const HomePege: React.FC = () => {\n  return (\n    <h2 className=\"title is-2 has-text-centered pb-3\">Home Page</h2>\n  );\n};\n","import React from 'react';\n\nimport { Link, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  person: Person,\n  visiblePeople: Person[],\n};\n\nexport const PersonRow: React.FC<Props> = ({ person, visiblePeople }) => {\n  const location = useLocation();\n\n  const activeRow = location.pathname;\n  const searchParams = location.search;\n\n  return (\n    <tr\n      key={person.slug}\n      className={classNames({ 'is-selected has-background-success': activeRow.includes(person.slug) })}\n    >\n      <td>\n        {person.name}\n      </td>\n      <td>\n        {person.sex}\n      </td>\n      <td>\n        {person.born}\n      </td>\n      <td>\n        {person.died}\n      </td>\n      <td>\n        {visiblePeople.some(elem => elem.name === person.fatherNameSlug?.name) ? (\n          <Link\n            to={{ pathname: `${person.fatherNameSlug?.slug}`, search: searchParams }}\n            className=\"button is-info is-inverted\"\n          >\n            {person.fatherName}\n          </Link>\n        )\n          : <p className=\"pl-4\">{person.fatherName || 'Not father'}</p>}\n      </td>\n      <td>\n        {visiblePeople.some(elem => elem.name === person.motherNameSlug?.name) ? (\n          <Link\n            to={{ pathname: `${person.motherNameSlug?.slug}`, search: searchParams }}\n            className=\"button is-danger is-inverted\"\n          >\n            {person.motherName}\n          </Link>\n        )\n          : <p className=\"pl-4\">{person.motherName || 'Not mother'}</p>}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\n\nimport { PersonRow } from '../PersonRow';\nimport './PeopleTable.scss';\n\ntype Props = {\n  visiblePeople: Person[],\n  handleSortChang: (event: React.MouseEvent<HTMLElement>) => void,\n};\n\nexport const PeopleTable: React.FC<Props> = ({ visiblePeople, handleSortChang }) => {\n  return (\n    <>\n      <table className=\"table is-fullwidth\">\n        <thead>\n          <tr>\n            <th\n              className=\"PeopleTable__title\"\n              onClick={handleSortChang}\n            >\n              Name\n            </th>\n            <th\n              className=\"PeopleTable__title\"\n              onClick={handleSortChang}\n            >\n              Sex\n            </th>\n            <th\n              className=\"PeopleTable__title\"\n              onClick={handleSortChang}\n            >\n              Born\n            </th>\n            <th\n              className=\"PeopleTable__title\"\n              onClick={handleSortChang}\n            >\n              Died\n            </th>\n            <th className=\"pl-6\">\n              Father\n            </th>\n            <th className=\"pl-6\">\n              Mather\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {visiblePeople.map(person => (\n            <PersonRow person={person} key={person.slug} visiblePeople={visiblePeople} />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport { getPeople } from '../../api/api';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  const fetchPeople = async () => {\n    const peopleFromServer = await getPeople();\n\n    setPeople(peopleFromServer);\n  };\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  let updatePeople = people.map(person => (\n    {\n      ...person,\n      motherNameSlug: people.find(mother => person.motherName === mother.name),\n      fatherNameSlug: people.find(father => person.fatherName === father.name),\n    }\n  ));\n  const history = useNavigate();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  const AppliedQuery = searchParams.get('query') || '';\n  const [query, setQuery] = useState(AppliedQuery);\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n\n  const applyQuery = useCallback(\n    debounce((newQuery: string) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery);\n      } else {\n        searchParams.delete('query');\n      }\n\n      history(`?${searchParams.toString()}`);\n    }, 500),\n    [],\n  );\n\n  const handleQueryChange = (event: { target: { value: string; }; }) => {\n    setQuery(event.target.value);\n    applyQuery(event.target.value);\n  };\n\n  const handleSortChange = (event: React.MouseEvent<HTMLElement>) => {\n    const value = (event.target as Element).innerHTML;\n\n    if (event.target as Element) {\n      searchParams.set('sortBy', value);\n    } else {\n      searchParams.delete('sortBy');\n    }\n\n    if (sortOrder === 'asc' && value === sortBy) {\n      searchParams.set('sortOrder', 'desc');\n    } else {\n      searchParams.set('sortOrder', 'asc');\n    }\n\n    history(`?${searchParams.toString()}`);\n  };\n\n  if (AppliedQuery) {\n    updatePeople = updatePeople.filter(\n      person => `${person.name}${person.fatherName}${person.motherName}`.toLowerCase().includes(AppliedQuery.toLowerCase()),\n    );\n  }\n\n  if (sortBy) {\n    updatePeople.sort((a: Person, b: Person) => {\n      switch (sortBy) {\n        case 'Name':\n          return sortOrder === 'asc'\n            ? a.name.localeCompare(b.name)\n            : b.name.localeCompare(a.name);\n        case 'Sex':\n          return sortOrder === 'asc'\n            ? a.sex.localeCompare(b.sex)\n            : b.sex.localeCompare(a.sex);\n        case 'Born':\n          return sortOrder === 'asc'\n            ? a.born - b.born\n            : b.born - a.born;\n        case 'Died':\n          return sortOrder === 'asc'\n            ? a.died - b.died\n            : b.died - a.died;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return (\n    <div className=\"container is-widescreen\">\n      <h2 className=\"title is-2 has-text-centered pb-3\">People Page</h2>\n      <input\n        className=\"input\"\n        type=\"text\"\n        placeholder=\"Text input\"\n        onChange={handleQueryChange}\n        value={query || ''}\n      />\n      <PeopleTable\n        visiblePeople={updatePeople}\n        handleSortChang={handleSortChange}\n      />\n    </div>\n  );\n};\n","const URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = () => {\n  return fetch(URL)\n    .then(res => res.json());\n};\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport { Header } from './component/Header';\nimport { HomePege } from './component/HomePage';\nimport { PeoplePage } from './component/PeoplePage';\n\nimport 'bulma';\n\nimport './App.scss';\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <Header />\n    <div className=\"page\">\n      <Routes>\n        <Route path=\"/\" element={<HomePege />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n      </Routes>\n\n    </div>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}